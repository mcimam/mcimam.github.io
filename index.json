[{"content":"How to create ubuntu autoinstall Creating an automated installation ISO for Ubuntu can save time and ensure consistency across deployments. Here\u0026rsquo;s a step-by-step guide to create your own autoinstall ISO. Automatic Ubuntu installation is performed with the autoinstall format. You might also know this feature as “unattended”, “hands-off” or “preseeded” installation.\nThis format is supported in the following installers:\nUbuntu Server, version 20.04 and later Ubuntu Desktop, version 23.04 and later Step 1 : Download ubuntu package First, download the latest Ubuntu live server ISO from the official website. Download here\nStep 2: Create file ´autoinstall-user-data´ Next, create a file named autoinstall-user-data. Here\u0026rsquo;s an example configuration:\n#cloud-config autoinstall: version: 1 identity: hostname: svr password: \u0026#34;$y$j9T$eKDQKBfE.NOfLgQCzYNLB1$nmJbonWd.WtWoCKMtbTD4HlLK6lEkFj3AI378PDOw23\u0026#34; username: mcimam ssh: allow-pw: true install-server: true shutdown: reboot For more detail check Ubuntu Autoinstall Ref\nStep 3: Extract iso Extract the contents of the ISO file using the following commands:\nmkdir source-files xorriso -osirrox on -indev ubuntu-24.04-live-server-amd64.iso --extract_boot_images source-files/bootpart -extract / source-files Step 4: Add auto install configuration to iso Add the autoinstall-user-data file to the extracted files:\ncd source-files mkdir nocloud cd nocloud cp ../../autoinstall-user-data user-data touch meta-data Step 5. Add autoinstall menu to grub Edit the GRUB configuration file to add an autoinstall menu entry:\nvi source-files/boot/grub/grub.cfg Add following menu entry:\n# Add this one menuentry \u0026#34;Autoinstall Ubuntu Server\u0026#34; { set gfxpayload=keep linux /casper/vmlinuz quiet autoinstall ds=nocloud\\;s=/cdrom/nocloud/ --- initrd /casper/initrd } Step 6. Repack iso file Finally, repack the ISO with the following command:\nxorriso -as mkisofs -r -V \u0026#34;ubuntu-autoinstall\u0026#34; -J -boot-load-size 4 -boot-info-table -input-charset utf-8 -eltorito-alt-boot -b bootpart/eltorito_img1_bios.img -no-emul-boot -o ../ubuntu-24.04-server-amd64-autoinstall.iso . Now you have a custom Ubuntu autoinstall ISO ready to use!\nVideo Reference This note is based on tutorial provided by ubuntu and DanielPersson.\nFull video reference from DanielPersson.\n","permalink":"https://mcimam.github.io/blogs/automate-ubuntu-install/","summary":"How to create ubuntu autoinstall Creating an automated installation ISO for Ubuntu can save time and ensure consistency across deployments. Here\u0026rsquo;s a step-by-step guide to create your own autoinstall ISO. Automatic Ubuntu installation is performed with the autoinstall format. You might also know this feature as “unattended”, “hands-off” or “preseeded” installation.\nThis format is supported in the following installers:\nUbuntu Server, version 20.04 and later Ubuntu Desktop, version 23.04 and later Step 1 : Download ubuntu package First, download the latest Ubuntu live server ISO from the official website.","title":"Automate Ubuntu Install"},{"content":"This is some Hello world for you:\nPascal namespace HelloWorld; begin println(\u0026#34;Hello World!\u0026#34;) end. C++ #include \u0026lt;iostream\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; } Java public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } } Python print(¨Hello World!¨) BrainF*ck ++++++++++[\u0026gt;+++++++\u0026gt;++++++++++\u0026gt;+++\u0026gt;+\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;++.\u0026gt;+.+++++++..+++.\u0026gt;++.\u0026lt;\u0026lt;+++++++++++++++.\u0026gt;.+++.------.--------.\u0026gt;+.\u0026gt;. ","permalink":"https://mcimam.github.io/blogs/hello-world/","summary":"This is some Hello world for you:\nPascal namespace HelloWorld; begin println(\u0026#34;Hello World!\u0026#34;) end. C++ #include \u0026lt;iostream\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; } Java public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } } Python print(¨Hello World!¨) BrainF*ck ++++++++++[\u0026gt;+++++++\u0026gt;++++++++++\u0026gt;+++\u0026gt;+\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;++.\u0026gt;+.+++++++..+++.\u0026gt;++.\u0026lt;\u0026lt;+++++++++++++++.\u0026gt;.+++.------.--------.\u0026gt;+.\u0026gt;. ","title":"Hello World"}]