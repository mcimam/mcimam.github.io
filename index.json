[{"content":" Role Developer Techstack Odoo 17 Enterprise, FastAPI Module Contact, Inventory, Purchasing, Sale Schilliger, a Swiss family-run garden center business, sought to transition from their legacy ERP system, ProConcept, to Odoo 17 Enterprise. The goal was to implement a tailored Odoo solution to streamline operations while ensuring a smooth migration of data and processes. My role was to develop custom Odoo modules to support their specific business needs and facilitate a seamless transition.\nChallenge Nicelabel Module – Implementing a dynamic label printing solution that integrates with a web-based print server while allowing flexible template customization for various product formats.\nProConcept Import – Designing a real-time data import pipeline that ensures a parallel and efficient migration from ProConcept to Odoo, overcoming constraints such as speed, memory efficiency, and compatibility with Odoo\u0026rsquo;s worker-based execution model.\nContribution Nicelabel Module: Developed a custom module leveraging Odoo’s properties field to enable dynamic label template generation, ensuring compatibility across different product formats.\nProConcept Import: Designed and implemented a high-performance, memory-efficient import framework capable of real-time data migration while running entirely within Odoo’s worker processes.\nProvided technical support to ensure a smooth transition from ProConcept to Odoo, minimizing operational disruptions.\nResults Successfully integrated a real-time label printing system, improving efficiency in product labeling and packaging. Developed a scalable data import framework, allowing 1000 cust / minutes to be imported. Ensured a smooth ERP transition, reducing manual effort and operational risks for Schilliger’s business processes. Dev Note Proconcept Import To ensure a smooth transition between ProConcept and Odoo, the company has chosen a parallel implementation strategy, where both systems run simultaneously while gradually shifting feature usage to Odoo.\nThis approach introduces a challenge: both systems must be aware of each other\u0026rsquo;s data to maintain consistency. To address this, we implemented a solution that allows Odoo to communicate with ProConcept efficiently, as illustrated in the sequence diagram below.\nsequenceDiagram participant User participant Odoo participant OOPCSGW participant Proconcept DB User -\u0026gt;\u0026gt; Odoo: Trigger import loop All Records Odoo -\u0026gt;\u0026gt; OOPCSGW: Call API OOPCSGW -\u0026gt;\u0026gt; Proconcept DB: Call query Proconcept DB -\u0026gt;\u0026gt; OOPCSGW: Return data OOPCSGW -\u0026gt;\u0026gt; Odoo: Return data Note right of Odoo: save data in tmp file end Odoo -\u0026gt; User: Return recordset / status User can trigger data import from odoo-side. It can be trigger from scheduled action, server action, or even shell command. To ensure that there won\u0026rsquo;t be any duplicate data, it required for some mapping metadata to exist. This class diagram show system design that we choose to implement.\nclassDiagram class ProconceptAPI{ # base_url # username # password # timeout + call() + read() + search() + search_batch() + get_document() } class ModelAdaptor{ - _path - _filename } ProconceptAPI \u0026lt;|-- ModelAdaptor class ProconceptBase{ # base_url # username # password # timeout - _get_adaptor() + import_records() + reimport_records() + reimport_record() } class ProconceptModel { + external_id + odoo_id + last_update + extract() + transform() + load_data() } ProconceptBase \u0026lt;|-- ProconceptModel classDiagram class base.res.partner class schilliger_import.res.partner { + proconcept_customer_ids } base.res.partner \u0026lt;|-- schilliger_import.res.partner class proconcept.customer { + external_id + odoo_id + last_update + extract() + transform() + load_data() } proconcept.base \u0026lt;|-- proconcept.customer schilliger_import.res.partner *-- proconcept.customer class CustomerAdaptor { - _path - filename } ProconceptAPI \u0026lt;|-- CustomerAdaptor ProconceptCustomer --\u0026gt; CustomerAdaptor Nicelabel ","permalink":"https://mcimam.github.io/blogs/odoo-schilliger/","summary":"\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eRole\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eDeveloper\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eTechstack\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eOdoo 17 Enterprise, FastAPI\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eModule\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eContact, Inventory, Purchasing, Sale\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003eSchilliger\u003c/strong\u003e, a Swiss family-run garden center business, sought to transition from their legacy ERP system, ProConcept, to Odoo 17 Enterprise. The goal was to implement a tailored Odoo solution to streamline operations while ensuring a smooth migration of data and processes. My role was to develop custom Odoo modules to support their specific business needs and facilitate a seamless transition.\u003c/p\u003e","title":"Odoo - Schilliger"},{"content":"In this section, I am going to create new widget base on existing widget. Odoo use widget to display certain fields. All available widget is listed under web module. More specifically inside addons/web/static/src/views/fields.\nInheriting Existing Widget In this example, I am going to inherit properties fields and remove Add a property. Let\u0026rsquo;s call this widget new_properties. As usual, all modifiation will be done inside new odoo module.\nCreate new folder /static/src/components/new_properties. This folder will contains all .js and .xml that\u0026rsquo;s used by new widget.\nCreate new template view inside ./new_properties/new_properties_field.xml.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;templates xml:space=\u0026#34;preserve\u0026#34;\u0026gt; \u0026lt;t t-name=\u0026#34;PropertiesField\u0026#34; t-inherit=\u0026#34;web.PropertiesField\u0026#34;\u0026gt; \u0026lt;xpath expr=\u0026#34;//div[contains(@t-attf-class, \u0026#39;o_field_property_add\u0026#39;)]\u0026#34; position=\u0026#34;replace\u0026#34;\u0026gt; \u0026lt;div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/xpath\u0026gt; \u0026lt;/t\u0026gt; \u0026lt;/templates\u0026gt; Create new js module inside ./new_properties/new_properties_field.js. /** @odoo-module **/ // -\u0026gt; This indicate it\u0026#39;s an odoo module. REQUIRED FOR ODOO MODULE. import { registry } from \u0026#39;@web/core/registry\u0026#39;; //-\u0026gt; Use registry to register new fields import { PropertiesField } from \u0026#39;@web/views/fields/properties/properties_field\u0026#39;; //-\u0026gt; Fields that\u0026#39;s we inherite export class NicelabelPropertiesField extends PropertiesField { //-\u0026gt; In here, we inherit the fields setup(){ super.setup(); } } NicelabelPropertiesField.template = \u0026#34;\u0026lt;module name\u0026gt;.PropertiesField\u0026#34;; // -\u0026gt; Change the template to custom one NicelabelPropertiesField.supportedTypes = [\u0026#34;properties\u0026#34;]; // -\u0026gt; What data type this widget supported // Register new widget as field registry.category(\u0026#34;fields\u0026#34;).add(\u0026#34;new_properties\u0026#34;, NicelabelPropertiesField); Register assets inside __manifest__.py \u0026#34;assets\u0026#34;: { \u0026#34;web.assets_backend\u0026#34;: [ \u0026#34;\u0026lt;module name\u0026gt;/static/src/components/*/*.js\u0026#34;, \u0026#34;\u0026lt;module name\u0026gt;/static/src/components/*/*.xml\u0026#34;, ], }, Create new owl widget Repository ","permalink":"https://mcimam.github.io/blogs/odoo-owl-widget/","summary":"\u003cp\u003eIn this section, I am going to create new widget base on existing widget.\nOdoo use widget to display certain fields. All available widget is listed under web module.\nMore specifically inside \u003ccode\u003eaddons/web/static/src/views/fields\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"inheriting-existing-widget\"\u003eInheriting Existing Widget\u003c/h2\u003e\n\u003cp\u003eIn this example, I am going to inherit properties fields and remove \u003ccode\u003eAdd a property\u003c/code\u003e.\nLet\u0026rsquo;s call this widget \u003ccode\u003enew_properties\u003c/code\u003e.\nAs usual, all modifiation will be done inside new odoo module.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCreate new folder \u003ccode\u003e/static/src/components/new_properties\u003c/code\u003e.\nThis folder will contains all \u003ccode\u003e.js\u003c/code\u003e and \u003ccode\u003e.xml\u003c/code\u003e that\u0026rsquo;s used by new widget.\u003c/p\u003e","title":"Odoo Owl Widget"},{"content":"How to create ubuntu autoinstall Creating an automated installation ISO for Ubuntu can save time and ensure consistency across deployments. Here\u0026rsquo;s a step-by-step guide to create your own autoinstall ISO. Automatic Ubuntu installation is performed with the autoinstall format. You might also know this feature as “unattended”, “hands-off” or “preseeded” installation.\nThis format is supported in the following installers:\nUbuntu Server, version 20.04 and later Ubuntu Desktop, version 23.04 and later Step 1 : Download ubuntu package First, download the latest Ubuntu live server ISO from the official website. Download here\nStep 2: Create file ´autoinstall-user-data´ Next, create a file named autoinstall-user-data. Here\u0026rsquo;s an example configuration:\n#cloud-config autoinstall: version: 1 identity: hostname: svr password: \u0026#34;$y$j9T$eKDQKBfE.NOfLgQCzYNLB1$nmJbonWd.WtWoCKMtbTD4HlLK6lEkFj3AI378PDOw23\u0026#34; username: mcimam ssh: allow-pw: true install-server: true shutdown: reboot For more detail check Ubuntu Autoinstall Ref\nStep 3: Extract iso Extract the contents of the ISO file using the following commands:\nmkdir source-files xorriso -osirrox on -indev ubuntu-24.04-live-server-amd64.iso --extract_boot_images source-files/bootpart -extract / source-files Step 4: Add auto install configuration to iso Add the autoinstall-user-data file to the extracted files:\ncd source-files mkdir nocloud cd nocloud cp ../../autoinstall-user-data user-data touch meta-data Step 5. Add autoinstall menu to grub Edit the GRUB configuration file to add an autoinstall menu entry:\nvi source-files/boot/grub/grub.cfg Add following menu entry:\n# Add this one menuentry \u0026#34;Autoinstall Ubuntu Server\u0026#34; { set gfxpayload=keep linux /casper/vmlinuz quiet autoinstall ds=nocloud\\;s=/cdrom/nocloud/ --- initrd /casper/initrd } Step 6. Repack iso file Finally, repack the ISO with the following command:\nxorriso -as mkisofs -r -V \u0026#34;ubuntu-autoinstall\u0026#34; -J -boot-load-size 4 -boot-info-table -input-charset utf-8 -eltorito-alt-boot -b bootpart/eltorito_img1_bios.img -no-emul-boot -o ../ubuntu-24.04-server-amd64-autoinstall.iso . Now you have a custom Ubuntu autoinstall ISO ready to use!\nVideo Reference This note is based on tutorial provided by ubuntu and DanielPersson.\nFull video reference from DanielPersson.\n","permalink":"https://mcimam.github.io/blogs/automate-ubuntu-install/","summary":"\u003ch1 id=\"how-to-create-ubuntu-autoinstall\"\u003eHow to create ubuntu autoinstall\u003c/h1\u003e\n\u003cp\u003eCreating an automated installation ISO for Ubuntu can save time and ensure consistency across deployments. Here\u0026rsquo;s a step-by-step guide to create your own autoinstall ISO. Automatic Ubuntu installation is performed with the autoinstall format. You might also know this feature as “unattended”, “hands-off” or “preseeded” installation.\u003c/p\u003e\n\u003cp\u003eThis format is supported in the following installers:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu Server, version 20.04 and later\u003c/li\u003e\n\u003cli\u003eUbuntu Desktop, version 23.04 and later\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"step-1--download-ubuntu-package\"\u003eStep 1 : Download ubuntu package\u003c/h2\u003e\n\u003cp\u003eFirst, download the latest Ubuntu live server ISO from the official website.\nDownload \u003ca href=\"https://ubuntu.com/download\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Automate Ubuntu Install"},{"content":"This is some Hello world for you:\nPascal namespace HelloWorld; begin println(\u0026#34;Hello World!\u0026#34;) end. C++ #include \u0026lt;iostream\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; } Java public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } } Python print(¨Hello World!¨) BrainF*ck ++++++++++[\u0026gt;+++++++\u0026gt;++++++++++\u0026gt;+++\u0026gt;+\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;++.\u0026gt;+.+++++++..+++.\u0026gt;++.\u0026lt;\u0026lt;+++++++++++++++.\u0026gt;.+++.------.--------.\u0026gt;+.\u0026gt;. ","permalink":"https://mcimam.github.io/blogs/hello-world/","summary":"\u003cp\u003eThis is some Hello world for you:\u003c/p\u003e\n\u003ch2 id=\"pascal\"\u003ePascal\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-Pascal\" data-lang=\"Pascal\"\u003enamespace HelloWorld;\n\nbegin\n    println(\u0026#34;Hello World!\u0026#34;)\nend.\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"c\"\u003eC++\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-C++\" data-lang=\"C++\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#include\u003c/span\u003e \u003cspan class=\"cpf\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"java\"\u003eJava\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Java\" data-lang=\"Java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHelloWorld\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"python\"\u003ePython\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e¨\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e!¨\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"brainfck\"\u003eBrainF*ck\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-brainfuck\" data-lang=\"brainfuck\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003e++++++++++\u003c/span\u003e\u003cspan class=\"k\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++++++\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e++++++++++\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e-\u003c/span\u003e\u003cspan class=\"k\"\u003e]\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e++\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++++++\u003c/span\u003e\u003cspan class=\"nt\"\u003e..\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e++\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++++++++++++++\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003e+++\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003e------\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003e--------\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nb\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nt\"\u003e.\u003c/span\u003e\u003cspan class=\"c\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Hello World"}]